#!/usr/bin/perl

use strict;
use Getopt::Long;

my $print_usage = 0;

my $usage = <<USAGE;

 This script reads a fasta file and a genbank format file
 and outputs the genbank records that have corresponding
 fasta entires.
 
 It assumes that the fasta records are a subset of the 
 genbank records 

 When parsing fasta file headers, it will only use text in 
 the fasta header line up to the first whitespace.

 Outputs to stdout

  Mark Stenglein, Feb 25, 2015

 Usage: reconcile_genbank_to_fasta [-h] <genbank_file> <fasta_file>

   [-h]          print this message

USAGE


if ((scalar @ARGV == 0) and -t STDIN) { print $usage and exit; }

GetOptions ("h" => \$print_usage);


my $genbank_fn = shift or print $usage and die("error: missing genbank file\n");
my $fasta_fn = shift or print $usage and die("error: missing fasta file\n");

open (my $genbank_fh, "<", $genbank_fn) or print $usage and die("error: couldn't open genbank file $genbank_fn\n");
open (my $fasta_fh, "<", $fasta_fn) or print $usage and die("error: couldn't open fasta file $fasta_fn\n");

my %fasta_headers = ();

# First, parse fasta file and stick all headers in a hash
while (<$fasta_fh>)
{
   chomp;
   if (/^>(\S+)\s+/)
   {

      my $fasta_header = $1;
      $fasta_header =~ s/>//;
      $fasta_headers{$fasta_header} = 1;
   }  
}

# next, parse genbank file and output records if found
# in corresponding fasta file
my $printing_lines = 0;
while (<$genbank_fh>)
{
   chomp;
   # Is this RegEx sufficient?
   if (/^LOCUS\s+(\S+)/)
   {
      $printing_lines = 0;
      my $header = $1;
      if ($fasta_headers{$header})
      {
         $printing_lines = 1;
      }
   }
   if ($printing_lines)
   {
      print "$_\n";
   }
}
